# -*- coding: utf-8 -*-
"""D1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-gTkKx4KBEcVj-26UGtjFQPfp0pG4U8U
"""

import math

# Open the input file
f = open("input.txt", "r")

# Read the number of test cases
T = int(f.readline())

# Loop through each test case
for case in range(T):
    N, G = map(int, f.readline().split(" "))
    E = [int(f.readline().strip()) for _ in range(N)]

    positions = {}

    for i in range(N):
        current_position = 0
        stone = i
        current_energy = E[stone]
        while current_energy > 0:
            if current_position in positions:
                new = positions[current_position]
                positions[current_position] = stone
                stone = new
            current_position += 1
            current_energy -= 1

        positions[current_position-1] = stone

    minDistance = math.inf
    minIndex = -1
    for pos, stone in positions.items():
        distance = abs(pos+1-G)
        if distance < minDistance:
            minDistance = distance
            minIndex = stone
        elif distance == minDistance and stone < minIndex:
            minIndex = stone

    # Print the output to the terminal
    print(f"Case #{case+1}: {minIndex+1} {minDistance}")

# Close the input file
f.close()

